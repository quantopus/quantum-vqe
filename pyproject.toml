[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[project]
name = "quantum-vqe"
version = "0.1.0"
description = "VQE (Variational Quantum Eigensolver) algorithm implementation"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Quantopus Team", email = "team@quantopus.dev"},
]
keywords = ["quantum", "vqe", "qiskit", "optimization"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
]
dependencies = [
    # PRODUCTION: Use private PyPI
    # "quantum-interfaces>=0.1.0",
    
    # DEVELOPMENT: Use git-based dependency
    "quantum-interfaces @ git+https://github.com/quantopus/quantum-interfaces.git@v0.1.0",
    
    "qiskit>=0.44.0",
    "pydantic>=2.0.0",
    "numpy>=1.21.0"
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0"
]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]

[project.urls]
Homepage = "https://github.com/quantopus/quantum-vqe"
Repository = "https://github.com/quantopus/quantum-vqe.git"
Issues = "https://github.com/quantopus/quantum-vqe/issues"

[project.entry-points."quantum_algorithms"]
vqe = "quantum_vqe.main:VQEAlgorithm"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/quantum_vqe"]

[tool.hatch.envs.default]
dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0"
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "pytest --cov=quantum_vqe --cov-report=html {args:tests}"
lint = ["ruff check src tests", "mypy src"]
format = ["black src tests", "ruff check --fix src tests"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["qiskit.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=quantum_vqe"
testpaths = ["tests"]
pythonpath = ["src"] 